### REQUIRES ACCESS TO LANDOOPS CONTAINER REGISTRY
### See http://lenses.stream/install_setup/configuration/sql-config.html#kubernetes

# Basic info
replicaCount: 1
image:
  repository: eu.gcr.io/lenses-container-registry/lenses-sql-processor
  tag: 2.2
  pullPolicy: IfNotPresent

nodeSelector: {}
tolerations: {}
# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# Monitoring
monitoring:
  pipeline: ""
  enabled: true
  port: 9102
  path: /metrics
  logLevel: INFO

podManagementPolicy: OrderedReady

# serviceAccount is the service account to run the deployment as
serviceAccount: default

# javaOpts is any JVM options to pass to the runner
javaOpts: -Xms256m -Xmx512m
# -Dsun.security.krb5.debug=true

# registryProvider
registryProvider: default

processors:
  - application_id: ""
    sql: |-
      #  SET autocreate=true;
      #  INSERT INTO `lenses-sql-k8-test`

      #  SELECT MMSI, Speed, Longitude AS Long, Latitude AS Lat, `Timestamp`
      #  FROM iot_data
      #  WHERE Speed > 10
      #  AND _ktype=AVRO AND _vtype=AVRO

      # kafka ssl
      # The key and truststores file data are the base64 encoded contents of the files. YOU MUST PROVIDE THE DATA BASE64 encoded
      # and added to the kafka secret and mounted into /mnt/secrets
      # Password are not base64 encode

      # Users can extend the chart to add extra sasl and ssl props required. They will be loaded by the runner. Its looks for env vars beginning with ssl or sasl

sql: |-
  #  SET autocreate=true;
  #  INSERT INTO `lenses-sql-k8-test`

  #  SELECT MMSI, Speed, Longitude AS Long, Latitude AS Lat, `Timestamp`
  #  FROM iot_data
  #  WHERE Speed > 10
  #  AND _ktype=AVRO AND _vtype=AVRO

  # kafka ssl
  # The key and truststores file data are the base64 encoded contents of the files. YOU MUST PROVIDE THE DATA BASE64 encoded
  # and added to the kafka secret and mounted into /mnt/secrets
  # Password are not base64 encode

  # Users can extend the chart to add extra sasl and ssl props required. They will be loaded by the runner. Its looks for env vars beginning with ssl or sasl
kafka:
  ssl:
    enabled: false
    trustStoreFileData:
    keyStoreFileData:
    trustStorePassword:
    keyStorePassword:
    keyPassword:
  sasl:
    enabled: false
    # keyTabData is the contents kerberos keytab file is using kerberos mounted in /mnt/secrets
    keyTabData: |-

    # jaasFileData is the contents of the kafka jaas file mounted in /mnt/secrets
    jaasFileData: |-

    # mechanism is the sasl autentication mechnaism GSSAPI, SCRAM or PLAIN
    mechanism: "GSSAPI"
    # krb5Conf is the kerberos config data to be mounted into /etc
    krb5Conf: |-

  bootstrapServers:
    - name: kafka
      port: 9092
      sslPort: 9093
      saslSslPort: 9094
      saslPlainTextPort: 9095


# schemaRegistries is the location of the schema registry
schemaRegistries:
  enabled: true
  hosts:
    - host: schema-registry
      protocol: http
      port: 8081

# applicationId is the consumer group id for the LSQL Kstream, defaults to the release name
applicationId: ""

# metricsTopicSuffix is the suffix to attach metric topic _kafka_lenses_metrics
metricsTopicSuffix: ""

# metricsFrequency is the frequency which the runner will report metrics
metricsFrequency: 5000

# stateStoreDir is the location used by rocks db
stateStoreDir: logs/state-store

# ports is the rest port the runner will expose for status/interactive query/start/stop/resume
port: 8083

