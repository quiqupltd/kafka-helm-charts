{{- $root := . }}
{{- $processors := include "processors" .}}
{{- range $processor :=  .Values.processors -}}

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ $processor.application_id }}
  labels:
    app: {{ $processor.application_id }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
    lenses.io/app: {{ $processor.application_id  }}
    lenses.io/app.type: lenses-processor
    lenses.io/pipeline: {{ $root.Values.monitoring.pipeline | quote }}
spec:
  replicas: {{ $root.Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ $processor.application_id }}
        hostPort: {{ $root.Values.port | quote }}
        containerPort: {{ $root.Values.port | quote }}
        lenses.io/app: {{ $processor.application_id }}
        lenses.io/app.type: lenses-processor
        lenses.io/pipeline: {{ $root.Values.monitoring.pipeline | quote }}
      annotations:
        prometheus.io/scrape: {{ $root.Values.monitoring.enabled | quote }}
        prometheus.io/port: {{ $root.Values.monitoring.port | quote }}
        prometheus.io/path: {{ $root.Values.monitoring.path | quote }}
    spec:
      volumes:
        - name: kafka-secrets
          secret:
            secretName: {{ include "fullname" $root }}-kafka-secrets
            items:
              - key: client.keystore.jks
                path: client.keystore.jks
              - key: client.truststore.jks
                path: client.truststore.jks
              - key: jaas.conf
                path: jaas.conf
              - key: keytab
                path: keytab
        - name: krb
          configMap:
            name: {{ include "fullname" $root | quote }}
      serviceAccountName: {{ $root.Values.serviceAccount }}
      containers:
      - name: {{ $root.Chart.Name }}
        image: "{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}"
        imagePullPolicy: {{ $root.Values.image.pullPolicy }}
        ports:
        - containerPort: {{ $root.Values.port }}
        lifecycle:
          preStop:
            exec:
              command:
              - /etc/landoop/processor-stop
        livenessProbe:
          exec:
            command:
            - /etc/landoop/liveliness
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
          - name: kafka-secrets
            mountPath: "/mnt/secrets"
          - name: krb
            mountPath: "/etc/krb5.conf"
            subPath: "krb5.conf"
        resources:
{{ toYaml $root.Values.resources | indent 10 }}
        {{- if $root.Values.nodeSelector }}
        nodeSelector:
{{ toYaml $root.Values.nodeSelector | indent 10 }}
        {{- end }}
        {{- if $root.Values.tolerations }}
        tolerations:
{{ toYaml $root.Values.tolerations | indent 10 }}
        {{- end }}
        env:
        - name: ROOT_LOG_LEVEL
          value: {{ $root.Values.monitoring.logLevel | quote }}
        - name: SQL
          value: |-
{{ $root.Values.sql | indent 12}}
        - name: SQL_BOOTSTRAP_SERVERS
          value: {{ include "bootstrapBrokers" $root | quote }}
        - name: SQL_SCHEMA_REGISTRY_URL
          value: {{ include "registries" $root | quote }}
        - name: SQL_APP_ID
          value: {{ $processor.application_id | quote }}
        - name: SQL_STATE_STORE_DIR
          value: {{ $root.Values.stateStoreDir | quote }}
        - name: SQL_METRICS_TOPIC
          value: {{ include "metricTopic" $root | quote }}
        - name: SQL_METRIC_FREQUENCY
          value: {{ $root.Values.metricsFrequency | quote }}
        - name: SQL_PORT
          value: {{ $root.Values.port | quote }}
        - name: SQL_REGISTRY_PROVIDER
          value: {{ $root.Values.registryProvider | quote }}
        - name: SECURITY_PROTOCOL
          value: {{ include "securityProtocol" $root | quote }}
        - name: SASL_MECHANISM
          value: {{ default "GSSAPI" $root.Values.kafka.sasl.mechanism | quote }}
        - name: SSL_TRUSTSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks"
        - name: SSL_KEYSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks"
        - name: SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" $root }}-kafka-secrets"
              key:  "client.truststore.password"
        - name: SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" $root }}-kafka-secrets"
              key:  "client.keystore.password"
        - name: SSL_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" $root }}-kafka-secrets"
              key:  "client.key.password"

        {{- if $root.Values.kafka.sasl.enabled -}}
        - name: JAVA_OPTS
          value: "-Djava.security.auth.login.config=/mnt/secrets/jaas.conf {{ $root.Values.javaOpts }}"
        {{ else }}
        - name: JAVA_OPTS
          value: {{ $root.Values.javaOpts | quote }}
        {{- end -}}
{{- end -}}
